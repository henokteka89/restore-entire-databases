Use master
go
DECLARE @date CHAR(8)
SET @date = (SELECT CONVERT(char(8), GETDATE(), 112))
DECLARE @path VARCHAR(125)
SET @path = '\\Backup_Path\' -- Provide the backup path here
;WITH MoveCmdCTE ( DatabaseName, MoveCmd )
 AS ( SELECT DISTINCT
 DB_NAME(database_id) ,
 STUFF((SELECT ' ' + CHAR(13)+', MOVE ''' + name + ''''
 + CASE Type
 WHEN 0 THEN ' TO ''M:\SQLData\' -- Provide SQL Data File Path here
 ELSE ' TO ''N:\SQLLogs\' ---- Provide SQL Log File Path here
 END
 + REVERSE(LEFT(REVERSE(physical_name),
 CHARINDEX('\',
 REVERSE(physical_name),
1) - 1)) + ''''
 FROM sys.master_files sm1
 WHERE sm1.database_id = sm2.database_ID
 FOR XML PATH('') ,
 TYPE).value('.', 'varchar(max)'), 1, 1, '') AS MoveCmd
 FROM sys.master_files sm2
 )
SELECT 'Alter database ['+ name+'] set Single_User with rollback immediate;'+  ' RESTORE DATABASE ['+ name + '] FROM DISK = ''' + @path + '' + name + '.bak'' WITH FILE
= 1 '+movecmdCTE.MoveCmd
+', RECOVERY, REPLACE, STATS=5,buffercount=600;'+
'Alter database ['+ name+'] set Multi_User ;'
FROM sys.databases d
INNER JOIN MoveCMDCTE ON d.name = movecmdcte.databasename
WHERE d.name not in ('master','model','msdb','tempdb','distribution') 
--LIKE '%DatabaseName%'
GO
